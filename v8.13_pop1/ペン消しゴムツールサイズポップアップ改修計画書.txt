=================================
ペン/消しゴムツールサイズポップアップ改修計画書
=================================

【目標】
preview.webpのようなスロット式ツールサイズポップアップの実装

【主な機能要件】
1. スロット選択でサイズ切り替え
2. サイズと透明度をスライダーで変更
3. ペンと消しゴムで独立したスロット管理
4. ツール切り替え時にそれぞれのアクティブスロットを復元
5. スロット数と表示サイズ範囲は設定可能
6. 数値直接入力対応

【現状分析】
- ui/tool-size-popup.js: 既存のツールサイズポップアップ実装
- system/tool-size-manager.js: ツールサイズ管理システム
- system/settings-manager.js: 設定値の管理
- config.js: グローバル設定定義

【改修対象ファイルと責務】
1. config.js
   - ツールサイズスロット設定追加
   - スロットサムネイル表示範囲設定追加

2. system/tool-size-manager.js
   - ペン/消しゴム別のスロット状態管理追加
   - アクティブスロットインデックス管理
   - ツール切り替え時のスロット復元機能

3. ui/tool-size-popup.js
   - スロットUI実装
   - スロット選択ハンドラ
   - サイズ/透明度スライダー連動
   - 数値直接入力UI

4. core-initializer.js
   - ツールサイズマネージャーの初期化処理追加

【既存API確認】
- EventBus: 'tool:change', 'toolSize:change', 'eraserSize:change'
- StateManager: getCurrentTool(), getPenSize(), getEraserSize()
- ToolSizeManager: 既存メソッドの拡張が必要

【Phase 1: 設定とデータモデル】
改修: config.js, system/tool-size-manager.js
参考: system/state-manager.js, system/settings-manager.js

実装項目:
- config.jsにスロット設定追加
  * TOOL_SIZE_SLOTS: スロット数(デフォルト6)
  * SLOT_THUMBNAIL_MIN/MAX: サムネイル●のサイズ範囲
  * 各スロットの初期サイズと透明度配列

- ToolSizeManagerクラス拡張
  * penSlots/eraserSlots: 各ツールのスロット配列
  * activePenSlot/activeEraserSlot: アクティブスロットインデックス
  * getCurrentSlots(): 現在ツールのスロット取得
  * getActiveSlotIndex(): アクティブスロットインデックス取得
  * setSlotValue(index, size, opacity): スロット値設定
  * setActiveSlot(index): アクティブスロット変更
  * onToolChange(): ツール切り替え時の処理

【Phase 2: UI実装】
改修: ui/tool-size-popup.js
参考: ui/slider-utils.js, ui/dom-builder.js

実装項目:
- スロットUI生成
  * createSlotButtons(): 6つのスロットボタン生成
  * 各スロットに●サムネイルとサイズ/透明度表示
  * アクティブスロットのハイライト表示

- スロット選択処理
  * handleSlotClick(index): スロット選択ハンドラ
  * StateManagerとToolSizeManagerの値を更新
  * EventBus経由でサイズ変更通知

- スライダー連動
  * サイズスライダー変更時にアクティブスロット更新
  * 透明度スライダー変更時にアクティブスロット更新
  * リアルタイムでスロット表示を更新

- 数値入力UI
  * サイズ値クリックで<input>表示
  * Enter/フォーカスアウトで確定
  * バリデーション処理

【Phase 3: 統合とイベント連携】
改修: core-initializer.js, ui/tool-size-popup.js
参考: system/event-bus.js, core-runtime.js

実装項目:
- EventBus連携
  * 'tool:change'イベントでスロット切り替え
  * 'toolSize:change'でスロット値更新
  * 'slotChanged'新規イベント追加

- 初期化処理
  * core-initializerでToolSizeManager初期化
  * 設定値からスロット初期状態を復元

- ツール切り替え時の動作
  * ペン→消しゴム: eraserSlotsとactiveEraserSlotを適用
  * 消しゴム→ペン: penSlotsとactivePenSlotを適用
  * StateManager経由でサイズ/透明度を設定

【注意点】
- 座標系の混在なし(全てUI座標)
- StateManagerが唯一の状態保持者
- ToolSizeManagerはスロット専用の補助管理
- EventBus経由での疎結合な連携
- DOMBuilderを活用してDOM生成を統一
- 既存のツールサイズ変更フローを壊さない

【テストポイント】
1. スロット選択でサイズ/透明度が即座に反映
2. ペン⇔消しゴム切り替えで各スロット状態が保持
3. スライダー変更がアクティブスロットに反映
4. 数値直接入力が正常動作
5. スロット数変更時の表示調整
=================================