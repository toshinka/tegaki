# レイヤー変形・サムネイル問題 - 詳細分析レポート

## 報告された問題（再確認）

1. ✅ **レイヤーサムネイルが古い** - 回転・スケール変更が未反映
2. ✅ **Vモード編集がレイヤーパネルに反映されない** - タイムラインは正しい
3. ❌ **タイムラインサムネイルが初回反映しない** - リサイズ後にリニア反応
4. ❌ **反転ボタンが効かない** - Vモード時のUI反転ボタン・ショートカット

---

## イベントフロー図（現状）

### 【正常フロー】レイヤー変形時

```
ユーザー操作（Vキー + ドラッグ/ホイール）
  ↓
layer-transform.js: _handleLayerDrag() / _setupWheelEvents()
  ↓ 座標変換・Transform更新
  ↓
layer-transform.js: _emitTransformUpdated()
  ├→ layer:updated イベント発火（既存互換性）
  ├→ layer:transform-updated イベント発火【Phase 1】
  └→ thumbnail:layer-updated イベント発火【Phase 1】
  ↓
【分岐A】thumbnail-system.js（throttle 100ms）
  ↓ キャッシュ無効化
  ↓ thumbnail:layer-updated 再発火
  ↓
【分岐B】layer-panel-renderer.js（throttle 50ms）
  ↓ updateLayerThumbnail()
  ↓ ThumbnailSystem.generateLayerThumbnail()
  ↓ RenderTexture生成 → img.src更新
  ↓
✅ レイヤーパネルサムネイル更新完了

【分岐C】timeline-ui.js（throttle 0ms → 即時）
  ↓ requestThumbnailUpdate()
  ↓ AnimationSystem.generateFrameThumbnailOptimized()
  ↓ updateSingleFrameThumbnail()
  ↓
✅ タイムラインサムネイル更新完了
```

### 【問題フロー】初回変形時

```
ユーザー操作（Vキー + 初回ドラッグ）
  ↓
layer-transform.js: _handleLayerDrag()
  ↓ coordinateSystem 未初期化？
  ↓ screenClientToWorld() 呼び出し
  ↓
⚠️ coordinateSystem が null
  ↓ console.warn 出力
  ↓ return（処理中断）
  ↓
❌ イベント未発火 → サムネイル更新なし
```

### 【問題フロー】反転ボタン

```
ユーザー操作（Vモード + 反転ボタンクリック）
  ↓
ui-panels.js: flipHorizontalBtn.addEventListener('click')
  ↓
layerManager.flipActiveLayer('horizontal')
  ↓
layer-system.js: flipActiveLayer()
  ↓ this.transform.flipLayer()
  ↓
layer-transform.js: flipLayer()
  ↓ transform.scaleX *= -1
  ↓ applyTransform()
  ↓ updateFlipButtons()
  ↓ _emitTransformUpdated()【Phase 1で追加済み】
  ↓
✅ イベント発火自体は正常
  ↓
❌ しかしボタンが disabled のままクリック不可
```

---

## シンボル対応表（メソッド・プロパティ）

### layer-transform.js

| メソッド/プロパティ | 役割 | 問題点 |
|---------------------|------|--------|
| `constructor()` | 初期化 | ✅ coordinateSystem を null 設定 |
| `init(app, cameraSystem)` | 実行時初期化 | ✅ coordinateSystem = window.CoordinateSystem 取得 |
| `_handleLayerDrag(e)` | ドラッグ処理 | ⚠️ coordinateSystem null チェックあり |
| `_setupWheelEvents()` | ホイールスケール | ⚠️ onGetActiveLayer 依存 |
| `_emitTransformUpdated()` | イベント発火 | ✅ Phase 1実装済み（throttle付き） |
| `flipLayer(layer, direction)` | 反転処理 | ✅ Phase 1実装済み |
| `_updateFlipButtonsAvailability(isVMode)` | ボタン有効化 | ✅ enterMoveMode/exitMoveMode で実行 |

### layer-system.js

| メソッド/プロパティ | 役割 | 問題点 |
|---------------------|------|--------|
| `initTransform()` | transform初期化 | ✅ onFlipRequest コールバック設定済み |
| `flipActiveLayer(direction)` | 反転実行 | ✅ Phase 4実装済み |
| `_setupVKeyEvents()` | Vキーイベント | ✅ transform.enterMoveMode() 実行 |
| `isLayerMoveMode` | Vモード判定 | ✅ transform.isVKeyPressed 参照 |

### thumbnail-system.js

| メソッド/プロパティ | 役割 | 問題点 |
|---------------------|------|--------|
| `init(eventBus)` | イベント購読 | ✅ Phase 1-2実装済み |
| `_setupEventListeners()` | イベント設定 | ✅ layer:transform-updated 購読 |
| `generateLayerThumbnail()` | サムネイル生成 | ✅ キャッシュキーに transform 含む |
| `vKeyModeActive` | Vモード状態 | ✅ keyboard:vkey-pressed/released で更新 |
| `disableCacheDuringVMode` | Vモード中キャッシュ無効 | ✅ デフォルト true |

### layer-panel-renderer.js

| メソッド/プロパティ | 役割 | 問題点 |
|---------------------|------|--------|
| `_setupEventListeners()` | イベント購読 | ✅ Phase 3実装済み |
| `updateLayerThumbnail(index)` | 個別更新 | ✅ data-layer-index で検索 |
| `layerUpdateTimers` | throttle管理 | ✅ 50ms throttle |

### timeline-ui.js

| メソッド/プロパティ | 役割 | 問題点 |
|---------------------|------|--------|
| `setupThumbnailAutoUpdate()` | イベント購読 | ✅ Phase 4実装済み |
| `requestThumbnailUpdate()` | 更新リクエスト | ⚠️ throttle 0ms（即時） |
| `updateCurrentFrameThumbnail()` | 実際の更新 | ✅ AnimationSystem経由 |
| `thumbnailUpdateInProgress` | 更新中フラグ | ⚠️ 同時更新を防止 |

### keyboard-handler.js

| メソッド/プロパティ | 役割 | 問題点 |
|---------------------|------|--------|
| `handleKeyDown(e)` | キー処理 | ✅ Phase 4実装済み |
| `vKeyPressed` | Vモード状態 | ✅ KeyV で管理 |
| `Hキー処理` | 反転ショートカット | ✅ Phase 4実装済み |

### ui-panels.js

| メソッド/プロパティ | 役割 | 問題点 |
|---------------------|------|--------|
| `setupFlipButtons()` | ボタンリスナー | ✅ 実装済み |
| `flipHorizontalBtn` | 水平反転ボタン | ⚠️ disabled 状態の制御が不明確 |
| `flipVerticalBtn` | 垂直反転ボタン | ⚠️ disabled 状態の制御が不明確 |

---

## 問題点の詳細分析

### 問題3: タイムラインサムネイルが初回反映しない

#### 原因仮説

1. **AnimationSystem の初期化タイミング**
   - timeline-ui.js が layer:transform-updated を購読
   - しかし AnimationSystem.generateFrameThumbnailOptimized() が初回呼び出し時に失敗？

2. **thumbnailUpdateInProgress フラグ**
   ```javascript
   // timeline-ui.js L240
   async updateCurrentFrameThumbnail() {
       if (this.thumbnailUpdateInProgress) return; // ⚠️ 初回更新をブロック？
       
       this.thumbnailUpdateInProgress = true;
       try {
           await this.animationSystem.generateFrameThumbnailOptimized(currentFrameIndex);
           this.updateSingleFrameThumbnail(currentFrameIndex);
       } finally {
           this.thumbnailUpdateInProgress = false;
       }
   }
   ```

3. **リサイズ後にリニア反応する理由**
   - `camera:resized` イベントで `requestAllThumbnailsUpdate()` が実行
   - `updateAllFrameThumbnails()` が全フレームを強制再生成
   - これにより初回の「生成されていない」状態が解消

#### 検証すべきポイント

- [ ] AnimationSystem の初期化が layer-transform.js より遅い
- [ ] generateFrameThumbnailOptimized() が初回で null を返す
- [ ] thumbnailUpdateInProgress が初期化直後に true になっている

### 問題4: 反転ボタンが効かない

#### 原因確定

1. **ボタンの disabled 属性が解除されない**
   ```javascript
   // layer-transform.js L119
   _updateFlipButtonsAvailability(isVMode) {
       const flipHorizontalBtn = document.getElementById('flip-horizontal-btn');
       
       if (isVMode) {
           flipHorizontalBtn.removeAttribute('disabled');
           flipHorizontalBtn.style.opacity = '1';
       } else {
           flipHorizontalBtn.setAttribute('disabled', 'true');
           flipHorizontalBtn.style.opacity = '0.4';
       }
   }
   ```

2. **enterMoveMode() が呼ばれているか確認**
   ```javascript
   // layer-transform.js L45
   enterMoveMode() {
       if (this.isVKeyPressed) return; // ⚠️ 既にVモードなら何もしない
       
       this.isVKeyPressed = true;
       // ...
       this._updateFlipButtonsAvailability(true); // ここで有効化
   }
   ```

3. **layer-system.js の _setupVKeyEvents() が呼ばれているか**
   ```javascript
   // layer-system.js L?
   _setupVKeyEvents() {
       this.eventBus.on('keyboard:vkey-pressed', function() {
           // ⚠️ this.transform が初期化されているか？
           if (!this.transform) return;
           
           if (!this.transform.app && this.app && this.cameraSystem) {
               this.initTransform(); // ここで初期化
           }
           
           if (this.transform.isVKeyPressed) {
               this.transform.exitMoveMode();
           } else {
               this.transform.enterMoveMode(); // ここで有効化されるはず
           }
       }.bind(this));
   }
   ```

#### 検証すべきポイント

- [ ] layer-system.js の initTransform() が実行されているか
- [ ] keyboard:vkey-pressed イベントが発火しているか
- [ ] transform.enterMoveMode() が実行されているか
- [ ] DOM要素 `#flip-horizontal-btn` が存在するか

---

## 修正方針

### 問題3の修正: タイムラインサムネイル初回反映

#### 方針A: thumbnailUpdateInProgress の初期化を確認
```javascript
// timeline-ui.js の constructor で確実に false にする
this.thumbnailUpdateInProgress = false;
```

#### 方針B: layer:transform-updated の immediate フラグ対応
```javascript
// timeline-ui.js の setupThumbnailAutoUpdate()
this.eventBus.on('layer:transform-updated', ({ data }) => {
    const { immediate } = data || {};
    
    if (immediate) {
        // throttle をスキップして即時更新
        this.updateCurrentFrameThumbnail();
    } else {
        this.requestThumbnailUpdate();
    }
});
```

#### 方針C: AnimationSystem の初期化待機
```javascript
// timeline-ui.js の setupThumbnailAutoUpdate()
this.eventBus.on('layer:transform-updated', ({ data }) => {
    // AnimationSystem が初期化されているか確認
    if (!this.animationSystem?.generateFrameThumbnailOptimized) {
        console.warn('[TimelineUI] AnimationSystem not ready');
        return;
    }
    
    this.requestThumbnailUpdate();
});
```

### 問題4の修正: 反転ボタン有効化

#### 方針A: 初期化時の明示的な disabled 設定
```javascript
// layer-transform.js の _setupTransformPanel()
const flipHorizontalBtn = document.getElementById('flip-horizontal-btn');
if (flipHorizontalBtn) {
    // 初期状態は disabled
    flipHorizontalBtn.setAttribute('disabled', 'true');
    flipHorizontalBtn.style.opacity = '0.4';
    flipHorizontalBtn.style.cursor = 'not-allowed';
    
    flipHorizontalBtn.addEventListener('click', () => {
        // ⚠️ disabled状態でもclickイベントは発火する
        if (flipHorizontalBtn.hasAttribute('disabled')) {
            return; // 明示的にブロック
        }
        
        if (this.isVKeyPressed && this.onFlipRequest) {
            this.onFlipRequest('horizontal');
        }
    });
}
```

#### 方針B: keyboard:vkey-pressed イベントの確実な発火確認
```javascript
// keyboard-handler.js の handleKeyDown()
if (e.code === 'KeyV' && !e.ctrlKey && !e.shiftKey && !e.altKey) {
    if (!vKeyPressed) {
        vKeyPressed = true;
        
        // ✅ イベント発火
        eventBus.emit('keyboard:vkey-pressed', { pressed: true });
        
        // デバッグログ
        console.log('[KeyboardHandler] V key pressed, event emitted');
    }
}
```

#### 方針C: layer-system.js の _setupVKeyEvents() デバッグ
```javascript
// layer-system.js の _setupVKeyEvents()
this.eventBus.on('keyboard:vkey-pressed', function() {
    console.log('[LayerSystem] keyboard:vkey-pressed received');
    console.log('[LayerSystem] this.transform:', !!this.transform);
    console.log('[LayerSystem] this.transform.app:', !!this.transform?.app);
    
    if (!this.transform) {
        console.warn('[LayerSystem] transform not initialized');
        return;
    }
    
    if (!this.transform.app && this.app && this.cameraSystem) {
        console.log('[LayerSystem] Initializing transform...');
        this.initTransform();
    }
    
    if (this.transform.isVKeyPressed) {
        this.transform.exitMoveMode();
    } else {
        console.log('[LayerSystem] Entering move mode...');
        this.transform.enterMoveMode();
    }
}.bind(this));
```

---

## 推奨修正順序

1. **問題4の確認** - デバッグログ追加で原因特定
2. **問題3の確認** - AnimationSystem 初期化タイミング確認
3. **問題4の修正** - 反転ボタン有効化処理の修正
4. **問題3の修正** - タイムラインサムネイル初回反映の修正
5. **統合テスト** - 全体フロー確認

---

## 検証チェックリスト

### 問題3: タイムラインサムネイル
- [ ] Vキー押下 + 初回ドラッグ → タイムラインサムネイル即座に更新
- [ ] 回転・スケール変更 → タイムラインサムネイル即座に更新
- [ ] リサイズ不要で動作すること

### 問題4: 反転ボタン
- [ ] Vキー押下 → 反転ボタンが有効化（opacity 1, cursor pointer）
- [ ] 反転ボタンクリック → 反転動作
- [ ] Hキー押下 → 反転動作
- [ ] Shift+Hキー押下 → 垂直反転動作
- [ ] Vキー解除 → 反転ボタンが無効化（opacity 0.4, cursor not-allowed）

---

## 次のアクション

1. **デバッグログ版のコード生成** - 問題4の原因特定
2. **修正版コード生成** - 両問題の完全修正
3. **検証手順書作成** - 実際の動作確認手順

このレポートを元に、次の対応を行いますか？