# Phase 2 デバッグ・修正メモ

## 問題1: タイムラインサムネイルが古いcanvasサイズのまま

### 根本原因
`layer-system.js` の `renderFrameToTexture()` で作成された RenderTexture が、canvas拡大後も古いサイズのままになっている。

### 現象
- 100×100 → 200×200 リサイズ
- 既存フレームのサムネ枠は 200×200 に拡大 ✓
- だが描画内容は 100×100 範囲のみ表示 ✗

### 解決方法

#### A. renderFrameToTexture()でサイズを新しいcanvasサイズに更新

```javascript
// layer-system.js の renderFrameToTexture メソッド内

renderFrameToTexture(frameId, frameContainer) {
    const canvasSize = this.getCurrentCanvasSize(); // ← 最新サイズ取得
    
    // 既存テクスチャを破棄
    const oldTexture = this.frameRenderTextures.get(frameId);
    if (oldTexture) {
        oldTexture.destroy(true);
    }
    
    // 新サイズで RenderTexture を再作成
    const renderTexture = this.app.renderer.generateTexture(
        frameContainer,
        {
            resolution: 1,
            region: new PIXI.Rectangle(
                0, 0, 
                canvasSize.width,    // ← 最新幅
                canvasSize.height    // ← 最新高さ
            )
        }
    );
    
    this.frameRenderTextures.set(frameId, renderTexture);
}
```

#### B. animation-system.js で regenerateAllThumbnails() の前にテクスチャを削除・再作成

```javascript
// animation-system.js > handleCanvasResize()

handleCanvasResize(newWidth, newHeight) {
    if (!this.animationData?.frames || this.animationData.frames.length === 0) return;
    
    // ★重要: リサイズ後、既存フレームのテクスチャを一旦クリア
    this.animationData.frames.forEach(frame => {
        if (this.layerSystem?.destroyFrameRenderTexture) {
            this.layerSystem.destroyFrameRenderTexture(frame.id);
        }
    });
    
    // その後、新しいサイズで再生成
    setTimeout(() => {
        this.regenerateAllThumbnails();
    }, 200);
    
    if (this.eventBus) {
        this.eventBus.emit('animation:thumbnails-need-update');
    }
}
```

---

## 問題2: 描画座標ズレ（ペン先と描画位置がズレ）

### 根本原因
座標ズレは **リサイズの座標変換ロジックと描画座標系の混在** ではなく、以下が原因：

1. canvas 座標系は常に **左上が原点 (0, 0)**
2. リサイズ時、層座標は正しく変換されている ✓
3. しかし **RenderTexture が古いサイズで描画を切り取っている** ✗

### 例
```
リサイズ前: 100×100
  描画: (50, 50) ← RenderTexture の (50, 50)

リサイズ後: 200×200、中央配置
  層座標は正しく: (50, 50) → (75, 75) に移動 ✓
  だが RenderTexture は まだ 100×100 サイズ
    → (75, 75) の座標は RenderTexture の視野外
    → 描画されない または ズレて見える
```

### 解決方法

リサイズ後、**必ず全フレームのテクスチャを再作成する**

#### 修正フロー

```
1. resize-popup.js で `_applyResize()` 実行
   ↓
2. layer座標を正しく変換（現在のロジック）
   ↓
3. animation-system.js に通知
   ↓
4. handleCanvasResize() 内で:
   a) 全フレームの古いテクスチャ削除
   b) 新しいcanvasサイズで再レンダリング
   c) サムネイル再生成
```

---

## 実装チェックリスト

- [ ] `layer-system.js` > `renderFrameToTexture()` で canvasSize を現在サイズから取得
- [ ] `animation-system.js` > `handleCanvasResize()` でテクスチャクリア処理追加
- [ ] `camera-system.js` の `resizeCanvas()` で正しくイベント発火（既に実装）
- [ ] テスト: 100→200 リサイズ → 既存フレームのサムネが正しい描画を表示
- [ ] テスト: 新規フレーム作成 → 新しいアスペクト比で正しく表示

---

## 補足: 座標系の整理

### Canvas座標系（固定）
- 原点: 左上 (0, 0)
- 変わらない

### Layer座標系（リサイズで変換）
```
中央配置での例:
  旧: (x, y)
  新: (x + (新幅-旧幅)/2, y + (新高-旧高)/2)
```
→ **既に resize-popup.js で正しく実装されている** ✓

### RenderTexture（重要）
```
rect: (0, 0, canvasWidth, canvasHeight)
      ↑     ↑    ↑最新サイズで再作成が必要
```
→ **ここが改修ポイント** ← canvas座標系が変わっても、描画はrect内からのみ取得