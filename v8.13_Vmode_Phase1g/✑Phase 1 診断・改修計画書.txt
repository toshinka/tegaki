# Phase 1 診断・改修計画書

## 現在の問題状況

### 🔴 問題1: ペン色が黒（#000000）になっている
**症状**: futaba-maroon (#800000) ではなく黒で描画される

**原因候補**:
1. `BrushSettings.color` デフォルト値が `0x000000` に設定されている
2. `config.js` の `pen.color: 0x800000` が参照されていない
3. `StrokeData` のデフォルトが `0x000000`
4. EventBusの `brush:color-changed` イベントが発火していない

**現在の実装フロー**:
```
config.js: pen.color = 0x800000
  ↓
BrushSettings.__constructor: color = 0x000000 （上書き）
  ↓
DrawingEngine.getBrushSettings(): brushSettings.getColor() = 0x000000
  ↓
StrokeRenderer.renderPreview(): color = 0x000000で描画
```

**改修方針**: 
- BrushSettingsのデフォルト値をconfig.jsから取得
- ColorPaletteUIをQuickAccessPopupに統合
- 色変更経路を明確化

---

### 🔴 問題2: ペン描画が右にズレている
**症状**: クリック位置より右に描画される

**原因候補**:
1. `cameraSystem.screenToLayer()` の座標変換が不正確
2. PointerEventのスクリーン座標計算にズレ
3. レイヤーの座標基準点がズレている

**確認項目**:
- `cameraSystem.canvasContainer` のグローバル位置
- `event.clientX/Y` vs `canvas.getBoundingClientRect()`

---

### 🔴 問題3: QuickAccessPopupのスライダーが3に固定
**症状**: スライダーを動かしても値が3px / 100% から動かない

**原因候補**:
1. `_onSizeChange()` / `_onOpacityChange()` が呼ばれていない
2. イベントリスナー未登録
3. input要素が未作成またはID取得失敗
4. EventBus購読が逆向き（スライダー → BrushSettingsの経路が逆）

**現在の実装フロー**:
```
スライダーの input イベント
  ↓
_onSizeChange() 呼び出し？
  ↓
EventBus.emit('brush:size-changed', {size})
  ↓
BrushSettings 購読? → 更新されない?
```

**確認項目**:
- input要素のID確認: `pen-size-slider`, `pen-opacity-slider`
- addEventListener登録の有無
- EventBusの発火確認

---

## 設計上の問題

### ✋ 色管理の二重実装
現在、色がこれらの場所で管理されている:
1. `config.js`: `pen.color`
2. `BrushSettings`: `this.color`
3. `StrokeData`: `color` フィールド
4. `quick-access-popup.js`: UI側で色管理なし

**改修方針**:
- **唯一の情報源 (SSOT)**: `BrushSettings`
- config.jsは初期値のみ提供
- ColorPaletteはQuickAccessPopup内に統合
- EventBusで色変更通知

### ✋ 座標系の統一不足
```
PointerEvent.clientX/Y (ブラウザスクリーン座標)
  ↓ [cameraSystem.screenToLayer()]
canvasLocal座標（canvasContainerローカル）
  ↓ [描画対象レイヤーの座標系]
レイヤーローカル座標
```

**問題**: canvasLocal → レイヤーローカルへの変換タイミングが不明確

---

## 改修スコープ

### Phase 1-A: 色管理の統一化
**ファイル**:
- `config.js`: Futaba色定義の拡張
- `brush-settings.js`: デフォルト値をconfig取得に変更
- `quick-access-popup.js`: ColorPalette UI追加
- `drawing-engine.js`: 色変更イベント統合

**作業量**: 中

### Phase 1-B: スライダー同期修正
**ファイル**:
- `quick-access-popup.js`: イベントリスナー確認・修復

**作業量**: 小

### Phase 1-C: 座標系統一・右ズレ修正
**ファイル**:
- `camera-system.js`: screenToLayer()の詳細検証
- `stroke-recorder.js`: 座標取得ロジック確認
- `core-runtime.js`: PointerEvent座標取得の確認

**作業量**: 大（要テスト）

---

## 推奨改修順序

1. **Phase 1-B (スライダー修正)** ← 最優先（クイックウィン）
2. **Phase 1-A (色管理統一)** ← 明確な設計
3. **Phase 1-C (座標系修正)** ← 複雑・要調査

---

## シンボル定義・メソッド辞典

### BrushSettings
```javascript
constructor(config, eventBus)
getCurrentSettings() → {size, color, alpha}
getSize() → number
setSize(size) → void
getColor() → 0xRRGGBB
setColor(color) → void
getAlpha() → 0.0-1.0
setAlpha(alpha) → void
```

### DrawingEngine
```javascript
setBrushSettings(brushSettings) → void
getBrushSettings() → {size, color, alpha}
startDrawing(x, y, event) → void
continueDrawing(x, y, event) → void
stopDrawing() → void
updatePreview() → void
```

### CameraSystem
```javascript
screenToLayer(screenX, screenY) → {x, y}
canvasContainer: PIXI.Container
worldContainer: PIXI.Container
```

### EventBus イベント
```
'brush:size-changed' → {size}
'brush:color-changed' → {color}
'brush:alpha-changed' → {alpha}
'stroke:start' → {layerId, settings}
'stroke:point' → {points, settings}
'stroke:end' → {strokeData}
```

---

## 実装チェックリスト

### Phase 1-B (スライダー修正)
- [ ] `quick-access-popup.js` の input要素ID確認
- [ ] addEventListener登録の有無確認
- [ ] EventBus.emit()実行タイミング確認
- [ ] BrushSettings購読側の確認

### Phase 1-A (色管理統一)
- [ ] config.jsにFutaba色パレット追加
- [ ] BrushSettings初期値をconfig取得に変更
- [ ] ColorPalette UI実装
- [ ] quick-access-popup.jsに統合

### Phase 1-C (座標系修正)
- [ ] cameraSystem.screenToLayer()実装確認
- [ ] canvasContainer グローバル位置ログ出力
- [ ] PointerEvent座標 vs getBoundingClientRect()比較
- [ ] core-runtime.js のPointerEvent処理確認