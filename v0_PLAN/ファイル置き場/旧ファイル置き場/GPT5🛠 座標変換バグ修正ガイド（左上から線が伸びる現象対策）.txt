🛠 座標変換バグ修正ガイド（左上から線が伸びる現象対策）
🎯 目的

screenToCanvas → canvasToPixi への変換処理で (0,0) に落ちてしまう問題を修正し、左上から直線が描かれる現象を防止する。

特に canvasRect 渡し忘れ、PixiJSの変換初期値、キャッシュ誤登録が原因になっている。

✅ 修正手順
Step 1. canvasRect を毎回取得する

pointerdown や pointermove など座標を使う直前で canvas.getBoundingClientRect() を必ず呼び出す。

呼び出し元コード例（ToolManagerやPenTool内）を以下に修正：

const canvasRect = this.canvasElement.getBoundingClientRect();
const coords = this.coordinateManager.extractPointerCoordinates(event, canvasRect, this.pixiApp);

Step 2. 座標変換デバッグログを追加

変換処理のどこで (0,0) になるか追跡するためにログを入れる。

console.log("📍座標チェック", {
    screen: { x: event.clientX, y: event.clientY },
    canvasRect,
    canvas: this.screenToCanvas(event.clientX, event.clientY, canvasRect)
});

Step 3. PixiJS座標変換を安全化

pixiApp.stage.scale や position が存在しない場合、無理に変換せず canvas座標をそのまま返すように修正。

const scale = pixiApp.stage.scale || { x: 1, y: 1 };
const position = pixiApp.stage.position || { x: 0, y: 0 };

if (!scale || !position) {
    return { x: canvasX, y: canvasY };
}

Step 4. キャッシュ登録の防御処理

(0,0) 座標をキャッシュに保存しないようにする。

if (canvasCoords.x === 0 && canvasCoords.y === 0) {
    console.warn("⚠️ 無効座標はキャッシュしません", canvasCoords);
} else {
    this.saveToCacheWithCleanup(cacheKey, coordinateData);
}

📋 最終チェックリスト

 canvasRect を毎回取得して渡しているか？

 デバッグログで screen / canvas / pixi 座標を確認できるか？

 PixiJS座標変換が undefined の場合に fallback しているか？

 (0,0) の誤キャッシュが防止されているか？