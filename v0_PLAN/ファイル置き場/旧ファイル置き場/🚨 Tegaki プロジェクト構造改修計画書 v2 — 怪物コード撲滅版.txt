🚨 Tegaki プロジェクト構造改修計画書 v2 — 怪物コード撲滅版
🎯 ゴール

「動いてるように見えるゴミ」を捨てる

エラーは隠さず暴く

構造は透けて見えるものにする

素人でも手で追えるシンプルさ を確保する

1. ❌ 「握りつぶしの禁止」

try/catch は 握りつぶさない

必ず log or throw を行い、
「どこで」「何が」「どんな値で」壊れたかを残す

「安定」と称してエラーを隠すのは 技術的債務の積立 でしかない

2. ⚔️ 「二枚舌をやめる」

本番と開発の挙動を分けるが、嘘はつかない

開発モード: 全エラー即 throw

本番モード: UIは守るが console に詳細ログを必ず吐く

「ユーザーに見せない」ことと「事実を隠す」ことは違う

3. 🪓 「怪物的肥大を切り刻む」

巨大クラスや巨大マネージャは分解する

原則:

1ファイル = 1責務

1関数 = 1機能

似たような処理をコピペで増やさない（AIがよくやる罠）

SOLID 原則を守れない構造は廃棄する

4. 🔥 「ブラックボックス禁止」

「AIが書いたから触れない」は即アウト

すべての処理は 人間が読める日本語コメント を必須とする

コメントは「何を」「なぜ」やってるかを書く（どうやるかはコードを見れば分かる）

コメントがない関数はレビューで却下

5. ⚡ 「エラーを設計の燃料にする」

エラーは悪ではない。設計の歪みを暴く信号

エラーが出たら「潰す」のではなく「責務を見直す」

無限にガードを積むのではなく、根本から潰す

6. 🧭 「素人でも道が分かる構造」

ファイルツリーは見ただけで役割が分かるように整理

名前空間は Tegaki.*** で揃え、散らばらせない

utils に何でも詰め込まない（怪物の餌になる）

7. 🚫 「便利のための便利禁止」

「一応動く」「とりあえず防御」みたいな便利は即カット

短期の安定より、長期の理解可能性を優先

ブラックボックス化した便利関数は毒

🔚 宣言

この計画は「とにかく動けばいい」思想を拒否し、
人間が理解できる構造を守るための宣言である。

誤魔化して安定風に見せるくらいなら、クラッシュさせろ

バグを隠すくらいなら、目の前で燃やして見せろ

それを直す手を人間とAIが一緒に動かすのだ