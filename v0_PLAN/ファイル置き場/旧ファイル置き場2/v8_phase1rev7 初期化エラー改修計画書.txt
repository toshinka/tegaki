# v8_phase1rev7 初期化エラー改修計画書

## 🎯 問題分析

### 主要エラー
```
Error: Required managers missing for v8 Tool initialization: coordinate, record
```

### 根本原因
1. `app-core.js`の`initializeV8Managers`で`CoordinateManager`と`RecordManager`が`this.managers`に登録されていない
2. `tool-manager.js`が要求するManager名と`app-core.js`のキー名不一致
3. v7互換コードの残存による管理の複雑化

## 🔧 改修対象ファイル

### 1. app-core.js
**現状**: CoordinateManagerとRecordManagerが未登録
**改修**: `initializeV8Managers`にManager登録追加

**提供メソッド**: 
- `constructor()` - AppCore初期化
- `createCanvasV8()` - v8対応Canvas作成
- `initializeV8Managers()` - Manager群初期化
- `getManager(name)` - Manager取得

**呼び出すメソッド**:
- `CanvasManager.constructor()` - Canvas管理システム初期化
- `ToolManager.constructor()` - Tool管理システム初期化  
- `CoordinateManager.constructor()` - 座標変換システム初期化
- `RecordManager.constructor()` - 操作履歴システム初期化
- `ErrorManager.logError()` - エラーログ出力

**処理フロー**:
開始 → PIXI Application作成 → CanvasManager初期化 → 各Manager登録 → ToolManager初期化 → 完了

### 2. tool-manager.js  
**現状**: Manager依存関係チェックでエラー発生
**改修**: 要求Manager名の確認・統一

**提供メソッド**:
- `constructor()` - ToolManager初期化
- `initializeV8Tools()` - v8対応Tool初期化
- `activateTool(toolName)` - Tool切り替え
- `getActiveTool()` - アクティブTool取得

**呼び出すメソッド**:
- `PenTool.constructor()` - ペンツール初期化
- `EraserTool.constructor()` - 消しゴムツール初期化
- `AbstractTool.initialize()` - 基底ツール初期化
- `ErrorManager.logError()` - エラーログ出力

**処理フロー**:
開始 → Manager依存関係確認 → 各Tool初期化 → Tool登録 → アクティブTool設定 → 完了

## 📊 Manager連携マトリクス

| Manager | 登録キー | 依存元 | 状態 |
|---------|----------|---------|------|
| CanvasManager | "canvas" | ToolManager | ✅済 |
| ToolManager | "tool" | AppCore | ✅済 |
| CoordinateManager | "coordinate" | ToolManager | ❌未登録 |
| RecordManager | "record" | ToolManager | ❌未登録 |
| ErrorManager | "error" | 全体 | ✅済 |
| ConfigManager | "config" | 全体 | ✅済 |

## 🚀 改修手順

### Step1: app-core.js修正
1. CoordinateManager・RecordManagerのimport追加
2. `initializeV8Managers`にManager登録コード追加
3. v7互換コード削除
4. ヘッダー情報更新

### Step2: tool-manager.js確認・修正
1. 要求Manager名の確認
2. エラーハンドリング改善
3. v7互換コード削除
4. ヘッダー情報更新

### Step3: 動作確認
1. Manager登録状況確認
2. Tool初期化成功確認
3. キャンバス表示確認
4. ペン描画動作確認

## 🎨 キャンバス表示フロー

```
Bootstrap → TegakiApplication → AppCore → CanvasManager
    ↓
Canvas作成 → Container階層作成 → レイヤー設定 → WebGPU対応
    ↓
ToolManager → Tool初期化 → イベント登録 → 描画準備完了
```

## 📝 ペン描画フロー

```
マウスダウン → PenTool.startDrawing → RecordManager.startOperation
    ↓
マウス移動 → PenTool.continueDrawing → Graphics更新
    ↓  
マウスアップ → PenTool.endDrawing → RecordManager.endOperation
```

## ⚠️ 重要注意点

1. **v7互換コード全廃**: 二重管理による複雑化を避ける
2. **Manager名統一**: tool-manager.jsの要求名と一致必須
3. **フォールバック禁止**: 正しい構造でのみ動作
4. **ヘッダー必須記載**: メソッド一覧・処理フロー明記

## 📋 改修後確認項目

- [ ] CoordinateManager正常登録
- [ ] RecordManager正常登録  
- [ ] Tool初期化成功
- [ ] キャンバス表示確認
- [ ] ペン描画動作確認
- [ ] エラーログ消失確認

## 🔍 デバッグ方法

```javascript
// Manager登録確認
console.log("Registered managers:", Array.from(appCore.managers.keys()));

// Tool初期化確認  
console.log("Initialized tools:", toolManager.getToolList());

// キャンバス状態確認
console.log("Canvas layers:", canvasManager.getLayerInfo());
```