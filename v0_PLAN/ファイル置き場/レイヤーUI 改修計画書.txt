レイヤーUI 改修計画書（v8_divide_rev2 / Fresco風ミニマル設計版）
作成目的：
- サイドバーを排除し、クリーンなUIを実現（Adobe Fresco風）。
- レイヤー数に応じて動的に伸縮する「レイヤーサイドバー判定」。
- ポップアップによるシンプル操作（透明度・結合・複製）。
- 背景透過表現（チェックパターン）は独立扱いとし、レイヤー実装から分離。

────────────────────────────────────
1. UI設計（外観と挙動）
- 基本構成：
  - キャンバス中央に描画領域。
  - 右側にレイヤーリスト・判定（透明背景）。レイヤー数に応じて可変長。
  - リスト項目は Adobe Fresco 同様にコンパクト表示。
- レイヤー項目：
  - 目アイコン（開/閉/×）。クリックで切替。
  - レイヤー名＋不透明度（例：100%）。
  - 背景レイヤー（Layer 0）は専用表示（削除不可、透明表現可）。
- ポップアップ（レイヤー右クリック or メニューから呼び出し）：
  - 不透明度スライダー（0–100%）。
  - 「下のレイヤーと結合」ボタン。
  - 「複製」ボタン。
- 操作：
  - レイヤー項目を左右スワイプ → 削除。
  - 削除時はスライドアウトアニメーション＋UNDO。
- サイズ感（画像準拠）：
  - レイヤー項目高さ：約28px。
  - フォントサイズ：約12px。
  - レイヤー群ボックス幅：約180–200px。
  - ポップアップ幅：約220px。角丸12px、背景薄ピンク。

────────────────────────────────────
2. データモデル
Layer {
  id: string
  name: string
  visible: "open"|"closed"|"disabled"
  opacity: number  // 0..1
  isBackground: boolean
  order: number
}

FileNode {
  id: string
  name: string
  children: (Layer|FileNode)[]
  thumbnail?: ImageBitmap
}

AppState {
  activeLayer: string|null
  layers: Layer[]
  files: FileNode[]
}

────────────────────────────────────
3. 背景透過表現（チェックパターン）【別項目】
- レイヤー要素とは独立したオーバーレイ。
- 描画領域の透明部分を覆う screen-space タイル。
- ズーム/パンの影響を受けない固定サイズ（例：16px）。
- CSS または PIXI Quad で実装：
  - CSS例：
    .checkerboard {
      position:absolute; inset:0;
      background-size:16px 16px;
      background-image:
        linear-gradient(45deg,#eee 25%,transparent 25%),
        linear-gradient(-45deg,#eee 25%,transparent 25%),
        linear-gradient(45deg,transparent 75%,#eee 75%),
        linear-gradient(-45deg,transparent 75%,#eee 75%);
      pointer-events:none;
    }

────────────────────────────────────
4. イベント仕様
- click(eye) → toggle visibility
- click(layer body) → select
- right-click/ellipsis → open popup
- popup slider → change opacity
- popup button(mergeDown) → 下のレイヤーと結合
- popup button(duplicate) → 複製
- swipe(layer item) → 削除（UNDO付き）

────────────────────────────────────
5. アイコン仕様
- SVGスプライトを利用。
- 必要アイコン：
  - レイヤー追加（layer+）
  - ファイル追加（file+）
  - 目（open/closed/disabled×）
- 単色（ダークレッド系）で統一、軽量表示。

────────────────────────────────────
6. 背景レイヤー仕様
- 削除不可（スワイプ操作は無効化）。
- 消しゴムで透明化 → チェックパターンが透ける。
- blendModeは normal 固定。

────────────────────────────────────
7. 実装手順
Step-1：
  - レイヤーリストの透明UI実装（可変長・半透明）。
  - 背景チェックパターン（CSSオーバーレイ）。
Step-2：
  - 目アイコン3状態。
  - スワイプ削除（UNDO付き）。
  - 背景レイヤー保護。
Step-3：
  - ポップアップ：透明度スライダー・結合・複製。
Step-4：
  - ファイル（フォルダ）追加とサムネ表示。
  - 微調整（サイズ感・フォント・配色）。

────────────────────────────────────
8. 受け入れ基準
- [UI] レイヤーリストは半透明で、数に応じて可変長。
- [UI] 背景透過はチェック柄で固定表示。ズーム影響なし。
- [操作] レイヤー削除は左右スワイプ、UNDO可能。
- [操作] ポップアップから不透明度変更・複製・結合が可能。
- [操作] 背景レイヤーは削除不可。消しゴムで透明化可能。
- [性能] 通常描画性能を維持（FPS60前後）。

────────────────────────────────────
9. 将来拡張（メモ）
- CUT（アニメフレーム管理）は縦軸管理に拡張予定。
- 合成サムネイル表示をファイルノードに追加。
- ブレンドモード拡張（乗算・加算等）は別フェーズ。

以上。Adobe Fresco風のクリーンUIを実現する最小要素を整理し、背景チェック柄は別項目として切り出した。
