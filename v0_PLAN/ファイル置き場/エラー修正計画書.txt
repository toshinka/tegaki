🔍 問題分析1. 初期キャンバスサイズ問題

設定: ENGINE_CONFIG.canvas = { width: 800, height: 600 }
期待値: 400 × 400
原因: 設定値が間違っている
2. サムネイル機能不全

PIXI.RenderTexture.create() + renderer.extract.base64() 使用
問題: レイヤーコンテンツが空または座標系のズレ
3. 拡縮・反転で画面真っ白

app.stage全体に変形を適用
問題: レイヤーとキャンバス操作の座標系が混在
📋 改修計画書

Phase 1: 座標系統一とコンテナ階層整理現在の構造（問題あり）:
app.stage (変形対象)
└── backgroundLayer (描画対象)
└── normalLayer (描画対象)

修正後の構造:
app.stage (固定)
└── canvasContainer (キャンバス操作用)
    └── backgroundLayer (描画対象)  
    └── normalLayer (描画対象)実装方針:

canvasContainer = new PIXI.Container() 作成
全レイヤーを canvasContainer に配置
キャンバス操作は canvasContainer に適用
描画は各レイヤーに直接適用

Phase 2: 初期設定修正javascriptconst ENGINE_CONFIG = {
    canvas: { width: 400, height: 400 }, // 修正
    rendering: { antialias: true, resolution: 1 }, // 修正

};Phase 3: サムネイル生成修正問題: レイヤーが空またはcanvasContainer変形の影響
解決策:

サムネイル生成時は変形をリセット
レイヤーの実際のコンテンツ範囲を取得
適切なスケールでレンダリング

Phase 4: 座標変換ルール明文化javascript// 座標変換チェーン
[DOM座標] 
  ↓ app.stage.toLocal()
[Stage座標] 
  ↓ canvasContainer.toLocal() 
[Canvas座標]
  ↓ layer.toLocal()
[Layer座標] ← 描画はここで実行