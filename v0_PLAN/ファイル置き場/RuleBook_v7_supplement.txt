# SatellitePlan_RuleBook_v7_補助書 (2025-09-12版・更新)

■ 対象: レイヤー移動・変形 → 選択範囲ツール → アニメ化UI
──────────────────────────────
■ 目的
- RuleBook_v7 に不足している「アニメ機能実装」までの技術的補助線を示す。
- レイヤー機能強化からタイムライン導入までを段階的に整理。
- AI改修が見通しよくできるよう、UI配置や責務分担を明示。
- **PixiJS v8.13 の Container.transform を活用した統一方針を明示**。

──────────────────────────────
■ フェーズ別方針

### Phase1.5: レイヤー操作強化
- レイヤーの上下移動（DOMパネルと描画順序を同期）
- レイヤーグループ化（Container単位でまとめる）
- **全ての位置・回転・拡縮操作は Container.transform に統一**
  - これにより、後の選択変形やボーン/モーフィングも一貫性を保持可能
- （RuleBook_v7との差分）
  → v7では「レイヤー機能は最小限」とされていたが、  
     今後のタイムライン化を見越して**レイヤーをトラック単位で扱える構造**に変更。

### Phase2: レイヤー変形 & 選択範囲
- レイヤー単位の移動 / 回転 / 拡縮を transform ベースで操作
- 選択範囲ツール（矩形選択）を導入し、部分的変形を可能に
- 選択結果は「一時的なContainer」に退避して操作、確定時に戻す方式
- （RuleBook_v7との差分）
  → v7では「変形は将来的課題」とされていたが、  
     **早期に transform ベースで統一して導入**する。

### Phase2.5: Cut管理UI
- レイヤーパネルに `◀ CUT1 ▶` を配置  
- レイヤー合成の状態を Cut 単位で保存
- （RuleBook_v7との差分）
  → v7では「Cut/Scene管理は未定」とされていたが、  
     **Storyboarder的簡易UIを先行導入**する方針に変更。

### Phase3: 簡易タイムライン
- index.html 側にDOM UIを追加し、下部に水平タイムライン
- レイヤーを縦軸、時間を横軸として表示
- 再生・停止・ジャンプなど基本操作を実装
- ゴースト表示（前後カット透過）オプションを追加
- （RuleBook_v7との差分）
  → v7では「タイムラインは最終段階」と記載。  
     本補助書では**選択変形後に早めに導入**。  
     理由: データ構造を早期に確定させ、AI改修の見通しを確保。

### Phase4: アニメ化拡張
- Cut と Timeline の統合: Cut を Timeline のノードとして扱う
- LIVE2D/SPINE的変形（Mesh + Bone）検討  
  → transform ベース統一でスムーズに統合可能
- マルチウィンドウ化（描画と編集UI分離）も検討
- 出力機能（GIF/動画）を最後に実装
- （RuleBook_v7との差分）
  → v7では「出力機能優先」とされていたが、  
     本補助書では**アニメUI完成 → 出力**に順序変更。

──────────────────────────────
■ 技術的補足

1. UI配置方針
- 簡易タイムラインは index.html のDOMで構築
- Pixi描画要素と連携する形で main.js 側にイベント制御
- Pixi内で描画する場合は後段階（特化UI用）

2. データ構造
- レイヤー = トラック = Container
- **位置・回転・拡縮は transform ベースで統一**
- Cut = レイヤー状態のスナップショット
- Timeline = Cut の配列 + 再生ポインタ


──────────────────────────────
■ まとめ
- RuleBook_v7との差分:  
  1. レイヤー変形は早期に transform ベースで統一  
  2. タイムライン導入時期を前倒し  
  3. 出力・マルチウィンドウは最後に回す
- フロー:
  レイヤー操作 → transformベース変形 → 選択範囲 → タイムライン → アニメUI → 出力  
- この順序で進めることで、AI改修の見通しが飛躍的に良くなる
──────────────────────────────
