<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>📦 PIXI Graphics Smooth 統合パッチ</title>
</head>
<body>
    <h1>📦 PIXI Graphics Smooth 統合手順</h1>
    
    <h2>🔧 1. package.json に追加すべきライブラリ</h2>
    <pre><code>{
  "dependencies": {
    "@pixi/graphics-smooth": "^1.1.1"
  }
}</code></pre>
    
    <h2>🌐 2. CDN版を使用する場合（HTML直読み対応）</h2>
    <p>index.htmlの&lt;head&gt;セクションに以下を追加：</p>
    <pre><code>&lt;!-- PIXI Graphics Smooth CDN --&gt;
&lt;script src="https://cdn.jsdelivr.net/npm/@pixi/graphics-smooth@1.1.1/dist/graphics-smooth.min.js"&gt;&lt;/script&gt;</code></pre>
    
    <h2>🖊️ 3. PenToolでの使用方法</h2>
    <pre><code>// 通常のGraphics → SmoothGraphics に変更
// this.currentGraphics = new PIXI.Graphics();
this.currentGraphics = new PIXI.smooth.SmoothGraphics();

// APIは同じなので、既存コードは変更不要
this.currentGraphics.lineStyle({
    width: this.penSettings.width,
    color: this.penSettings.color,
    alpha: this.penSettings.alpha,
    cap: this.penSettings.lineCap,
    join: this.penSettings.lineJoin
});
</code></pre>
    
    <h2>⚡ 4. パフォーマンス最適化のポイント</h2>
    <ul>
        <li>requestAnimationFrame でスロットリング</li>
        <li>最小距離フィルター（2px未満をスキップ）</li>
        <li>長大なストロークは分割して管理</li>
    </ul>
    
    <h2>🚨 5. 注意事項</h2>
    <ul>
        <li>PIXI.smooth は PIXI.js 読み込み後に利用可能</li>
        <li>CDN版使用時はグローバルスコープで PIXI.smooth を確認</li>
        <li>既存の Graphics コードは完全互換</li>
    </ul>
    
    <h2>📋 6. 統合チェックリスト</h2>
    <ol>
        <li>□ package.json に @pixi/graphics-smooth 追加</li>
        <li>□ または CDN スクリプトタグ追加</li>
        <li>□ PenTool で SmoothGraphics 使用</li>
        <li>□ リアルタイム描画テスト</li>
        <li>□ パフォーマンス確認</li>
    </ol>
</body>
</html>