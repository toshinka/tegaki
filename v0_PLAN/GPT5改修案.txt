1. coordinate-system.js 側の実装不足

今の coordinate-system.js を確認すると、

クラスやオブジェクト CoordinateSystem が定義されているが

globalToLocal というメソッドが 未定義

になっていると思います。
過去のフェーズのコードでは、globalToLocal は app.stage 座標とキャンバス座標の変換を行うために入っていた関数のはずです。
ところが今回の分割の過程で削除・未移植になっている。

2. 呼び出し側（core-engine.js）

core-engine.js 805行あたりでは、おそらくマウスイベントやペンイベントを処理するときに

const localPos = window.CoordinateSystem.globalToLocal(event.global);


のように呼び出しています。
つまり「グローバル座標 → レイヤー／キャンバス座標」への変換が必要です。

3. 原因まとめ

定義されていない関数を呼び出している

分割リファクタ時に globalToLocal 実装が coordinate-system.js に入っていない

そのため window.CoordinateSystem.globalToLocal が undefined → 呼び出しエラー

4. 解決の方向性

修正は coordinate-system.js に関数を追加する形です。
PixiJS v8.13 の場合、ステージ座標からローカル座標変換は container.toLocal(point, fromContainer) を使います。
たとえば以下のように実装すれば呼び出しは通ります。

window.CoordinateSystem = {
    globalToLocal(globalPoint) {
        // PixiJS の Point を使って変換
        return app.stage.toLocal(globalPoint);
    },
    localToGlobal(localPoint) {
        return app.stage.toGlobal(localPoint);
    }
};


（app への参照をどこから持ってくるかは設計によります。core-engine.js から渡すか、coordinate-system.js 内で window.app を見るか。）

✅ 結論
エラーの原因は coordinate-system.js に globalToLocal が未定義なのに core-engine.js から呼び出している ためです。
修正するには coordinate-system.js に globalToLocal（および必要なら localToGlobal）を実装する必要があります。