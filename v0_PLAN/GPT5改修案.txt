🕵️‍♂️ 原因究明
1. XY移動は正常だが回転・拡縮が壊れる理由

移動（x, y の変更）は sprite.x, sprite.y のように「ローカル座標」のまま更新しており問題なし。

回転・拡縮は sprite.rotation, sprite.scale.set(...) を変更しているが、
確定処理で transform をリセットまたは座標変換を二重適用している 可能性がある。

Pixi v8 は内部的に

localTransform（自身の回転・スケール・位置）

worldTransform（親込みで最終的に反映される座標）
を持っています。

確定処理で getBounds() や toGlobal() / toLocal() を使って 座標をワールド座標に焼き付け → transform 初期化 する方式にしている場合、
回転や拡縮の情報を飛ばしてしまうと「消えた」「飛んだ」ように見えます。

2. 想定される壊れパターン

sprite.setTransform(x, y, 1, 1, 0) のように scale/rotation をリセット してしまっている。

container.toLocal() で得た座標を直接 sprite.position に代入して scale/rotation が保持されない。

transform 確定処理が「XY移動専用」で書かれていて、回転・拡縮分を考慮していない。

🛠 改修案
✅ 1. 確定処理で transform を壊さないようにする

回転や拡縮を適用した後、確定処理では「現在の transform を維持したまま position のみ調整」するように変更。

function confirmTransform(sprite) {
    // 現在のワールド座標を基準にローカルへ再設定する
    const parent = sprite.parent;

    // ワールド座標の中心点を取得
    const worldPos = sprite.getGlobalPosition();

    // ローカル座標に変換
    const localPos = parent.toLocal(worldPos);

    // === 位置だけを更新 ===
    sprite.position.copyFrom(localPos);

    // rotation, scale は壊さない
    // sprite.rotation, sprite.scale.x, sprite.scale.y はそのまま保持
}

✅ 2. もし「transform を焼き付けたい」場合

たとえば「回転や縮小を確定して通常の bitmap に戻す」ような動作が必要なら、PixiJS の RenderTexture を使って書き戻す必要があります。

function bakeTransform(sprite, app) {
    const rt = PIXI.RenderTexture.create({
        width: sprite.width,
        height: sprite.height
    });

    app.renderer.render(sprite, { renderTexture: rt });

    const baked = new PIXI.Sprite(rt);
    baked.position.copyFrom(sprite.position);
    baked.rotation = 0;
    baked.scale.set(1);

    sprite.parent.addChild(baked);
    sprite.destroy(); // 元を削除
    return baked;
}


ただしこれは「完全な確定焼き付け」で、アクティブレイヤーの transform を保持しなくなるので、普通のペイントソフト的には そのまま transform を残すほうが自然 です。

✅ 3. 改修ステップ提案

core-engine.js で「Vキーで確定する処理」を探す。
→ おそらく setTransform 系か toLocal() で再配置している部分がある。

その部分を「position のみ更新」に修正。
scale/rotation は保持する。

どうしても焼き付けたい場合は上記の RenderTexture バージョンを別途実装。

🎯 結論

原因：確定処理で transform（rotation/scale）がリセット or 無視されている。

改修：座標確定では position のみ調整し、scale/rotation を保持するよう修正。

代替手段：焼き付ける場合は RenderTexture 経由で新Spriteに変換する。