🎨 パイロット版お絵かきツール改修計画書
1. 開発方針と前提
項目	詳細	備考
描画基盤	HTML5 Canvas 2D API	軽量化、CDNのみでの動作を優先。
ペンツール	Perfect Freehand（採用済）	筆圧（PointerEvent.pressure）と滑らかな補間線を実現。
ライブラリ	CDN経由の最小限の依存関係	動作の簡易性を最優先。
カラーパレット	ふたば☆ちゃんねるカラーに準拠	UI/UXの一貫性を確保。
コード管理	windowグローバルへの公開	ブックマークレットからのアクセスと互換性を確保。

Google スプレッドシートにエクスポート
2. 機能別改修項目
2.1. コア機能の拡張（ペン・消しゴム・アンドゥ）
機能名	実装内容	備考
消しゴム (E)	透明消しゴムとして実装。context.globalCompositeOperation = 'destination-out' を使用し、下のピクセルを透過させる。	レイヤー機能と組み合わせることで、下のレイヤーに影響を与えずに消去可能。
ブラシサイズ変更	スライダーUIの実装。	プリセットサイズとして 1, 3, 5, 10, 20 pxを用意し、ワンクリックで適用可能にする。
アンドゥ/リドゥ (Ctrl+Z/Y)	Canvas State Manager（独自実装）を導入。	描画操作が完了するたびにCanvasの内容または操作ログを配列に保存し、context.putImageData()や操作ログの再実行で履歴を管理する。

Google スプレッドシートにエクスポート
2.2. カラー機能の拡張
機能名	実装内容	備考
カラーパレット	以下の色と白を合わせた10スロットのUIを実装。	UIの配色もこのカラーセットに準拠させる。
配色	メインカラー（描画色）とサブカラー（予備色/UIのハイライト色など）の概念を導入。	
カラー交換 (X)	メインカラーとサブカラーを瞬時に入れ替えるボタン/ショートカットを実装。	
スポイト	Canvas 2Dの**context.getImageData()**を使用して、キャンバス上の任意の座標の色を取得し、メインカラーに設定する。	
カラーサークル	簡易的なHSB/HSV形式のカラーピッカーライブラリ（CDN利用可能な軽量なもの）を導入し、詳細な色選択を可能にする。	

Google スプレッドシートにエクスポート
🎨 デフォルトカラーパレット（10スロット）
No.	色名称	HEX値	用途
1	Maroon	#800000	アクティブペンカラー (デフォルト)
2	Light Maroon	#aa5a56	
3	Medium	#cf9c97	
4	Light Medium	#e9c2ba	
5	Cream	#f0e0d6	UI背景色/セカンダリ
6	Background	#ffffee	キャンバス背景色 (デフォルト)
7	Black	#000000	
8	White	#ffffff	必須追加色
9	(ブランク)	(任意の色)	ユーザーカスタム用
10	(ブランク)	(任意の色)	ユーザーカスタム用

Google スプレッドシートにエクスポート
2.3. ストレージ機能とレイヤー機能
レイヤー機能
機能名	実装内容	備考
レイヤー機能	複数のCanvas要素を重ねる方式を採用。	最低3層 (Background, Layer 1, UI Overlay)とし、描画にはLayer 1を使用する。
レイヤー切替	描画対象レイヤーを切り替える簡易UIを実装。	パイロット版では移動/透明度変更などの複雑な機能は割愛し、描画対象の切り替えに限定する。
描画準備	Layer 0（#ffffee）をデフォルトの背景色とし、常に最下層に配置する。	

Google スプレッドシートにエクスポート
ブラウザ保管機能（アルバム）
機能名	実装内容	備考
絵の保管	localStorage または IndexedDB を使用。	Canvas.toDataURL('image/png')でPNG形式のデータを取得し、それをBase64文字列として保存する。
アルバム機能	簡易的なギャラリーUIを設ける。	保存されたサムネイルとタイトル（タイムスタンプなど）を表示し、クリックで復元可能にする。最大保存数（例：10枚）を設定し、パイロット版の制限とする。

Google スプレッドシートにエクスポート
3. 実装上の役割分担（クラス設計案）
ブックマークレットからの実行とグローバル公開の要件を満たすため、以下のグローバルクラスを定義し、役割を明確にします。

クラス/モジュール	役割	依存する主要機能
window.AppCore	描画アプリケーション全体を統括。初期化、イベントリスナー登録、グローバル状態管理。	全て
window.DrawManager	Perfect Freehandを使用した実際の描画処理、消しゴム処理（destination-out）を担当。	ペン、消しゴム、ブラシサイズ
window.StateManager	アンドゥ/リドゥの履歴管理（Canvasデータの保存/復元）、レイヤー管理。	アンドゥ、リドゥ、レイヤー
window.UIManager	カラーパレット、スライダー、アルバムなどのDOM要素の生成とイベントハンドリング。	全てのUI、ショートカット
window.ConfigManager	カラー定義、ブラシプリセットなどの定数管理。	全て