# GIFアニメーション機能改修計画書 - タイムライン改善版

## 現在の問題点分析

### 🔍 確認された問題
1. **レイヤーサムネイルがタイムラインCUTに反映されていない**
   - CUTサムネイル生成処理で個別レイヤーのサムネイルではなく全体キャンバスをキャプチャしている
   - レイヤー合成結果がCUTサムネイルに反映されていない可能性

2. **CUT増加時のキャンバス空白・座標ズレ**
   - `applyCutToLayers`での座標変換処理に不整合がある
   - レイヤー状態復元時の座標基準が混在している

3. **UI改修要求**
   - ループボタンを`repeat`アイコンに変更、ON/OFFを反転点灯表示
   - ループボタンを▶️の左隣に移動
   - GIF書き出しをループ元位置に移動
   - +CUTをFPSの右隣に移動
   - タイムラインサムネイル時間ボタンを◀▶に変更、左右配置

## 段階的改修計画

### 段階1: CUTサムネイル生成改善（最重要）
**ファイル**: `system/animation-system.js`
**目的**: レイヤー合算サムネイルをCUTに正しく反映

#### 改修内容
- `generateCutThumbnail`メソッドを改修
- LayerSystem統合APIを使用してレイヤー合成結果をキャプチャ
- サムネイル生成時の座標変換処理を統一

#### 後続Claude向けガイド
```javascript
// 改修対象メソッド: AnimationSystem.generateCutThumbnail()
// 現在: 個別レイヤーキャプチャ → 要改修: レイヤー合成キャプチャ
// LayerSystem.layersContainer全体をレンダリング対象にする
// CoordinateSystem APIで座標変換の一貫性を保証
```

### 段階2: 座標変換統一（重要）
**ファイル**: `system/animation-system.js`
**目的**: CUT適用時の座標ズレ解消

#### 改修内容
- `applyCutToLayers`と`applySnapshotToLayer`の座標処理統一
- CoordinateSystem API使用の徹底
- 中央基準とワールド座標の混在解消

#### 後続Claude向けガイド
```javascript
// 改修対象: applySnapshotToLayer()内の座標設定処理
// 現在の問題: フォールバック処理で座標基準が混在
// 修正方針: CoordinateSystem.worldToScreen()の一貫使用
// 座標基準: キャンバス中央を原点とする統一座標系
```

### 段階3: タイムラインUI配置変更
**ファイル**: `index.html`, `ui/timeline-ui.js`
**目的**: UIレイアウトの改善

#### 改修内容HTML（index.html）
```html
<!-- 現在の配置 -->
<div class="timeline-controls">
    <button id="play-btn">▶</button>
    <button id="add-cut-btn">+CUT</button> <!-- FPSの右隣へ移動 -->
    <button id="export-gif-btn">GIF</button> <!-- ループ元位置へ移動 -->
</div>

<!-- 改修後の配置 -->
<div class="timeline-controls">
    <button id="loop-btn" title="ループ再生">
        <!-- repeatアイコンに変更 -->
        <svg>...</svg>
    </button>
    <button id="play-btn">▶</button>
    <button id="export-gif-btn">GIF</button> <!-- ループ元位置 -->
</div>

<div class="timeline-settings">
    <label>FPS: 
        <input type="number" id="fps-input">
    </label>
    <button id="add-cut-btn">+CUT</button> <!-- FPSの右隣 -->
</div>
```

#### 改修内容CSS（index.html内）
```css
/* ループボタンの反転点灯スタイル */
#loop-btn.active {
    background: var(--futaba-maroon);
    color: var(--text-inverse);
    border-color: var(--futaba-maroon);
}

/* サムネイル時間ボタンを左右配置 */
.cut-duration-controls {
    display: flex;
    align-items: center;
    gap: 2px;
    width: 46px;
}

.cut-duration-nav {
    width: 12px;
    height: 12px;
    font-size: 6px;
    background: var(--futaba-background);
    border: 1px solid var(--futaba-light-medium);
    cursor: pointer;
}
```

#### 後続Claude向けガイド
```javascript
// 改修対象: timeline-ui.js内のsetupEventListeners()
// ループボタンイベント処理追加
// 既存のcheckbox削除、button化
// SVGアイコン: lucide-repeatアイコン使用
// 反転点灯: classList.toggle('active')で制御
```

### 段階4: CUTタイムライン表示時間制御改善
**ファイル**: `ui/timeline-ui.js`, `index.html`
**目的**: サムネイル表示時間の直感的制御

#### 改修内容
- 上下ボタンから左右ボタン（◀▶）に変更
- ボタン位置を左右配置に変更
- 時間制御の精度向上

#### 後続Claude向けガイド
```javascript
// 改修対象: createCutItem()内のHTML生成部分
// 現在: input type="number" のみ
// 追加: ◀▶ナビゲーションボタン
// イベント: ±0.1秒刻みでの時間調整
```

## ファイル別改修詳細

### system/animation-system.js（段階1・2）
#### 重要な改修ポイント
1. **サムネイル生成の統一**
   - LayerSystem.layersContainer全体のレンダリング
   - 個別レイヤーではなく合成結果をキャプチャ

2. **座標変換の統一**
   - CoordinateSystem API一貫使用
   - 中央基準座標系の徹底

#### API依存関係確認
- ✅ LayerSystem API: `layersContainer`, `layers`, `layerTransforms`
- ✅ CoordinateSystem API: `worldToScreen`, `screenToWorld`
- ✅ EventBus: 統合済み
- ✅ PixiJS v8.13: 対応済み

### ui/timeline-ui.js（段階3・4）
#### 重要な改修ポイント
1. **イベントリスナー再構築**
   - ループボタン化（checkbox→button）
   - repeatアイコン追加
   - 反転点灯制御

2. **CUT時間制御改善**
   - ナビゲーションボタン追加
   - 左右配置への変更

### index.html（段階3・4）
#### 重要な改修ポイント
1. **HTML構造変更**
   - タイムラインコントロール配置変更
   - ループボタンHTML追加

2. **CSS追加**
   - 反転点灯スタイル
   - 左右配置スタイル

## 改修順序と依存関係

```
段階1: CUTサムネイル改善
    ↓（サムネイル表示確認後）
段階2: 座標変換統一
    ↓（座標ズレ解消確認後）
段階3: UI配置変更
    ↓（レイアウト調整後）
段階4: 時間制御改善
```

## 検証ポイント

### 段階1完了後
- [ ] CUTサムネイルにレイヤー合成結果が反映されている
- [ ] 複数レイヤーでの合成が正しく表示される

### 段階2完了後
- [ ] CUT切り替え時に座標がズレない
- [ ] キャンバス中央基準が維持される

### 段階3完了後
- [ ] ループボタンが▶️の左隣に配置されている
- [ ] GIF書き出しがループ元位置に移動している
- [ ] +CUTがFPSの右隣に配置されている

### 段階4完了後
- [ ] サムネイル表示時間が◀▶で制御できる
- [ ] 左右配置で直感的操作が可能

## 想定される課題と対策

### 座標変換API不整合
**課題**: LayerSystemとAnimationSystemでの座標基準の違い
**対策**: CoordinateSystem APIの一貫使用、座標変換処理の統一化

### EventBus統合の不完全性
**課題**: イベント通知の抜け漏れ
**対策**: 改修時にEventBus通知の確認・追加

### PixiJS v8.13互換性
**課題**: レンダリングAPI変更による動作不具合
**対策**: PixiJS v8.13準拠のレンダリング処理確認

## 元機能保護指針

- 🔒 既存のキーボードショートカット維持
- 🔒 アニメーション再生・停止機能維持
- 🔒 CUT作成・削除機能維持
- 🔒 GIF書き出し機能維持
- 🔒 レイヤー操作機能維持

各段階完了時に必ず機能テストを実行し、元機能が失われていないことを確認すること。