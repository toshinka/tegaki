# GIFアニメーション機能 問題診断・改修計画書

## 現状の問題診断

### 1. レイヤー二重表示問題
**症状**: レイヤーパネルに「レイヤー1」と「背景」が二重に出現
**原因箇所**: 
- `animation-system.js`: 初期CUT作成時の重複処理
- `layer-system.js`: 初期化タイミングの競合

**根本原因**: 
- `createInitialCutIfNeeded()`が複数回実行される可能性
- LayerSystemとAnimationSystemの初期化順序の不整合

### 2. 描画位置ズレ問題  
**症状**: 描画位置がズレるが、レイヤーサムネイルでは正常。Vキーを押すと治る
**原因箇所**:
- `animation-system.js`: `applyTransformToLayerFixed()`での座標計算
- CUT切り替え時の変形データ適用タイミング

**根本原因**:
- レイヤーのpivot/position初期設定の不整合
- 変形データ適用時のキャンバス中央基準計算の誤り

### 3. 表示時間UIの窮屈さ
**症状**: 上下ボタンが窮屈、◀▶アイコン実装が不完全
**原因箇所**:
- `index.html`: タイムラインUIの重複実装
- `timeline-ui.js`: CSSの競合

### 4. ショートカットキー競合
**症状**: Ctrl+Shift+N、Ctrl+Nがブラウザショートカットと競合
**原因箇所**:
- `index.html`: キーボードイベントハンドラ

### 5. タイムライン停止位置問題
**症状**: GIF再生停止時に最初のCUTに戻る
**原因箇所**:
- `animation-system.js`: `stop()`メソッドの実装

### 6. アンドゥ・リドゥ未実装
**症状**: Ctrl+Z、Ctrl+Yが機能していない
**原因箇所**:
- `system/history.js`: History実装の不完全性
- EventBus統合の不足

## 改修計画（段階的実装）

### Phase 1: 緊急修正（即時対応）

#### 1.1 レイヤー二重表示修正
```javascript
// animation-system.js
- 初期化フラグの強化
- createInitialCutIfNeeded()の呼び出し制限
- レイヤー重複チェックの強化
```

#### 1.2 描画位置ズレ修正
```javascript
// animation-system.js
- applyTransformToLayerFixed()の座標計算修正
- 初期pivot/position設定の統一
- CUT切り替え時の変形リセット処理
```

#### 1.3 タイムライン停止位置修正
```javascript
// animation-system.js
- pause()メソッドの追加実装
- stop()とpause()の役割分離
- 再生位置保持ロジックの実装
```

### Phase 2: UI改善（次段階）

#### 2.1 表示時間UI改善
```javascript
// timeline-ui.js
- 不要なサムネイルボタン削除
- ◀▶スタイルの表示時間制御実装
- CSSの整理統合
```

#### 2.2 ショートカットキー改善  
```javascript
// index.html
- CTRL+L: 新規レイヤー作成
- Shift+C: アクティブCUTコピー+右隣にコピーCUT貼り付け
- ブラウザショートカット回避処理
※他UIや機能を消したり無用な変更をしないように注意。
```

### Phase 3: 機能補完（最終段階）

#### 3.1 アンドゥ・リドゥ実装
```javascript
// system/history.js
- 履歴スタックの実装
- EventBus統合
- 非破壊的な操作記録
```

#### 3.2 CUTコピー・ペースト実装
```javascript
// animation-system.js
- copyCut()メソッド実装
- pasteCut()メソッド実装
- クリップボード管理
```

## 実装順序と優先度

### 優先度1（即時修正必要）
1. **レイヤー二重表示修正** - 作業効率に直接影響
2. **描画位置ズレ修正** - 基本機能の不具合
3. **タイムライン停止位置修正** - UX改善

### 優先度2（早期修正推奨）
4. **表示時間UI改善** - UIの使いやすさ向上
5. **ショートカットキー改善** - 作業効率向上

### 優先度3（機能補完）
6. **アンドゥ・リドゥ実装** - 必須機能の実装
7. **CUTコピー・ペースト** - アニメ制作効率向上

## 技術的考慮事項

### PixiJS v8.13活用
- WebGL2機能の積極利用
- GPUアクセラレーション最適化
- 高効率レンダリング

### コード品質維持
- AI改修容易性の確保
- 明確なAPI境界
- 単一責任原則の遵守
- 冗長コードの排除

### パフォーマンス最適化
- 不要な再描画の抑制
- メモリリークの防止
- イベント処理の最適化

## 改修ガイドライン

### ファイル修正時の注意
1. **必要最小限の修正**を心がける
2. **元の機能を保持**しながら問題を修正
3. **二重実装を避ける**
4. **エラー演出は最小限**に抑える

### API整合性の維持
- CoordinateSystem統一API遵守
- EventBus経由の通信維持
- LayerSystem/AnimationSystem連携保持

### テスト項目
- [ ] レイヤー作成・削除が正常動作
- [ ] 描画位置が正確
- [ ] CUT切り替えで絵が消えない
- [ ] タイムライン再生・停止が適切
- [ ] ショートカットキーが機能
- [ ] アンドゥ・リドゥが動作

## 推奨改修順序

1. **animation-system.js** - 主要問題の修正
2. **timeline-ui.js** - UI改善
3. **index.html** - ショートカット改善
4. **history.js** - アンドゥ・リドゥ実装

## 成功基準

- レイヤー重複表示が解消される
- 描画位置が常に正確になる  
- タイムライン操作が直感的になる
- ショートカットキーが競合しない
- アンドゥ・リドゥが機能する
- 全体的なUXが向上する