================================================================================
サムネイル更新問題 - 完全分析表
================================================================================

【現象まとめ】
1. アクティブレイヤーサムネイル: 基本リニア反応
2. タイムラインサムネイル: 初期は反応しない
3. 800x600リサイズ後:
   - アクティブレイヤー: アスペクト比は変わるが非アクティブは未更新
   - タイムライン: 反映されるようになる
4. Vキーモード(回転・拡大)後:
   - アクティブレイヤー: 反応しない
   - タイムライン: リニアに反応

================================================================================
イベントフロー分析
================================================================================

【イベント発火源と購読先の対応表】

┌─────────────────┬──────────────────────────┬────────────────────────┐
│ 発火源           │ イベント名                 │ 購読先                  │
├─────────────────┼──────────────────────────┼────────────────────────┤
│ drawing-engine   │ thumbnail:layer-updated    │ layer-panel-renderer   │
│ (stopDrawing)    │                            │ (アクティブのみ)        │
├─────────────────┼──────────────────────────┼────────────────────────┤
│ layer-system     │ layer:stroke-added         │ thumbnail-system       │
│ (addPath...)     │                            │ (キャッシュクリア)      │
├─────────────────┼──────────────────────────┼────────────────────────┤
│ layer-system     │ layer:transform-updated    │ thumbnail-system       │
│ (flipActiveLayer)│                            │ timeline-thumbnail-    │
│                  │                            │ utils (未購読)          │
├─────────────────┼──────────────────────────┼────────────────────────┤
│ layer-transform  │ layer:transform-updated    │ thumbnail-system       │
│ (onTransform...) │                            │ (未発火の可能性)        │
├─────────────────┼──────────────────────────┼────────────────────────┤
│ camera-system    │ camera:resized             │ thumbnail-system       │
│ (resizeCanvas)   │                            │ layer-panel-renderer   │
│                  │                            │ timeline-thumbnail-    │
│                  │                            │ utils                  │
├─────────────────┼──────────────────────────┼────────────────────────┤
│ camera-system    │ camera:transform-changed   │ thumbnail-system       │
│                  │                            │ timeline-thumbnail-    │
│                  │                            │ utils                  │
└─────────────────┴──────────────────────────┴────────────────────────┘

================================================================================
サムネイル生成メソッド対応表
================================================================================

┌──────────────────┬────────────────────┬─────────────────────────┐
│ ファイル          │ メソッド            │ 使用座標系              │
├──────────────────┼────────────────────┼─────────────────────────┤
│ thumbnail-system │ generateLayer      │ Layer Local座標         │
│                  │ Thumbnail()        │ (renderer.render直接)   │
├──────────────────┼────────────────────┼─────────────────────────┤
│ thumbnail-system │ generateFrame      │ Frame Container全体     │
│                  │ Thumbnail()        │ (World座標相当)         │
├──────────────────┼────────────────────┼─────────────────────────┤
│ layer-panel-     │ _generateAndDisplay│ ThumbnailSystem経由     │
│ renderer         │ Thumbnail()        │ (ImageBitmap→Canvas)    │
├──────────────────┼────────────────────┼─────────────────────────┤
│ timeline-        │ generateThumbnail()│ ThumbnailSystem経由     │
│ thumbnail-utils  │                    │ (ImageBitmap→Canvas)    │
└──────────────────┴────────────────────┴─────────────────────────┘

================================================================================
キャッシュキー生成戦略
================================================================================

【thumbnail-system.js】

Layer Thumbnail:
  cacheKey = `layer_${layerId}_${width}_${height}_${transform}`
  transform = `${pos.x}_${pos.y}_${rot}_${scale.x}_${scale.y}`
  
  ⚠️ 問題点: 
  - transformパラメータがキャッシュキーに含まれる
  - Layer の position/rotation/scale が変わるとキャッシュミス
  - しかし、イベントでキャッシュクリアされないと古いキャッシュが返る

Frame Thumbnail:
  cacheKey = `frame_${frameId}_${thumbWidth}_${thumbHeight}`
  
  ⚠️ 問題点:
  - transformパラメータが含まれていない
  - frameId だけではレイヤー変形を検知できない
  - レイヤー変形時にキャッシュクリアされていない

【timeline-thumbnail-utils.js】

  cacheKey = `${frame.id}_${frame.canvasWidth || 800}_${frame.canvasHeight || 600}`
  
  ⚠️ 問題点:
  - frame.canvasWidth/Height がフレームオブジェクトに存在しない
  - 常に 800_600 で固定される
  - リサイズ後のキャッシュキーが変わらない

================================================================================
イベント購読状況
================================================================================

【layer-panel-renderer.js】

購読イベント:
  ✅ thumbnail:layer-updated        → updateLayerThumbnail()
  ✅ layer:path-added               → updateAllThumbnails()
  ✅ camera:transform-changed       → updateAllThumbnails()
  ✅ camera:resized                 → updateAllThumbnails()
  ✅ layer:transform-updated        → updateAllThumbnails()

動作:
  - updateLayerThumbnail(index) は指定レイヤーのみ更新
  - updateAllThumbnails() は全レイヤーを更新
  - requestAnimationFrame で更新をスケジュール

⚠️ 問題点:
  - updateLayerThumbnail() が layerIndex で検索している
  - DOM querySelector が機能していない可能性
  - 非アクティブレイヤーが更新されない原因

【timeline-thumbnail-utils.js】

購読イベント:
  ✅ thumbnail:regenerate-all       → _invalidateCache()
  ✅ camera:transform-changed       → _invalidateCache()
  ✅ camera:resized                 → _invalidateCache()

⚠️ 欠落:
  ❌ layer:transform-updated        → 購読なし
  ❌ layer:stroke-added             → 購読なし
  ❌ thumbnail:frame-updated        → 購読なし

動作:
  - _invalidateCache() はキャッシュをクリアするだけ
  - その後の再生成は animationSystem.regenerateAllThumbnails() に依存
  - イベント不足で更新されない

【thumbnail-system.js】

購読イベント:
  ✅ layer:transform-updated        → _invalidateLayerCacheByLayerId()
  ✅ layer:stroke-added             → invalidateLayerCache()
  ✅ layer:path-added               → invalidateLayerCache()
  ✅ layer:flip-horizontal          → _invalidateLayerCacheByLayerId()
  ✅ layer:flip-vertical            → _invalidateLayerCacheByLayerId()
  ✅ animation:frame-updated        → invalidateFrameCache()
  ✅ camera:resized                 → clearAllCache()
  ✅ camera:transform-changed       → clearAllCache()

動作:
  - キャッシュクリアのみ実行
  - 再生成は呼び出し側（layer-panel, timeline-utils）に依存

================================================================================
座標系とレンダリング対象
================================================================================

【renderer.render() の対象】

┌─────────────────┬──────────────────┬────────────────────────┐
│ 用途             │ container引数     │ 座標系                  │
├─────────────────┼──────────────────┼────────────────────────┤
│ Layer Thumbnail  │ layer (Container)│ Layer Local座標         │
│                  │                  │ position/rotation/scale │
│                  │                  │ がそのまま反映          │
├─────────────────┼──────────────────┼────────────────────────┤
│ Frame Thumbnail  │ frame (Container)│ Frame = Cut = World座標 │
│                  │                  │ 全レイヤーの合成結果    │
└─────────────────┴──────────────────┴────────────────────────┘

⚠️ 問題点:
  - Layer Thumbnail は layer 単体をレンダリング
  - layer.position/rotation/scale が適用された状態でレンダリング
  - Vキーモード中の変形は layer.transform に反映される
  - しかし、キャッシュキーに含まれる transform は layerData.transform
  - 実際の layer.position と layerData.transform が同期していない？

================================================================================
Vキーモード時の変形フロー
================================================================================

【layer-transform.js → layer-system.js】

1. Vキー押下 → enterMoveMode()
   - layer-transform が layer.position/rotation/scale を直接変更
   - layerData.transform は更新されない（まだ未確定）

2. ドラッグ中 → _handleLayerDrag()
   - transform オブジェクト（内部管理）を更新
   - applyTransform() で layer に適用
   - updateTransformPanelValues() でUI更新
   - requestThumbnailUpdate() でサムネイル更新リクエスト

3. Escキー → exitMoveMode()
   - layer.position/rotation/scale をリセット
   - transform を初期化

4. Enterキー → confirmLayerTransform()
   - 現在の transform を paths データに焼き込む
   - layer を再構築
   - transform をリセット

⚠️ 問題点:
  - Vキーモード中は layer.transform が変化するが layerData は未更新
  - キャッシュキーに layerData.transform が含まれている場合、
    ドラッグ中の変形がキャッシュキーに反映されない
  - 結果: 同じキャッシュキーで古いサムネイルが返される

================================================================================
リサイズ時の動作
================================================================================

【camera:resized イベント】

1. camera-system → camera:resized 発火
   ↓
2. thumbnail-system → clearAllCache()
   ↓
3. layer-panel-renderer → updateAllThumbnails()
   ↓
4. timeline-thumbnail-utils → _invalidateCache()

⚠️ アスペクト比変更の反映:
  - Layer Thumbnail: 64x64 固定（アスペクト比無視）
  - Frame Thumbnail: アスペクト比保持でリサイズ
  - リサイズ後は canvasWidth/Height が変わる
  - timeline-thumbnail-utils のキャッシュキーは
    `frame.id_${frame.canvasWidth}_${frame.canvasHeight}`
  - しかし frame.canvasWidth が存在しない → 常に 800_600

================================================================================
問題の核心まとめ
================================================================================

【1. レイヤーサムネイル】

症状: Vキーモード中の変形がアクティブレイヤーに反映されない

原因:
  a) キャッシュキーに layer.position/rotation/scale が含まれる
  b) Vキーモード中は layer.transform が変化するが layerData は未更新
  c) キャッシュキーの transform 部分が古い値のまま
  d) 同じキャッシュキーで古いサムネイルが返される

解決策:
  - キャッシュキー生成時に layer.position/rotation/scale を直接使用
  - または Vキーモード中はキャッシュを無効化

【2. 非アクティブレイヤーサムネイル】

症状: リサイズ後も非アクティブレイヤーが更新されない

原因:
  a) updateLayerThumbnail(index) の DOM 検索が失敗
  b) querySelector(`.layer-item[data-layer-index="${index}"]`) が空
  c) data-layer-index 属性が設定されていない

解決策:
  - createLayerElement() で data-layer-index 属性を追加
  - または this.container.children[index] で直接アクセス

【3. タイムラインサムネイル】

症状: 初期は反応しない、リサイズ後は反応する

原因:
  a) timeline-thumbnail-utils が layer:transform-updated を購読していない
  b) キャッシュキーに frame.canvasWidth が存在せず、常に 800_600
  c) リサイズ前: キャッシュキー変わらず → 古いキャッシュ返す
  d) リサイズ後: camera:resized でキャッシュクリア → 再生成

解決策:
  - timeline-thumbnail-utils に layer:transform-updated 購読追加
  - キャッシュキー生成を config.canvas.width/height から取得

【4. Vキーモード時のタイムライン反応】

症状: タイムラインはリニアに反応する

原因:
  a) Frame Thumbnail は frame container 全体をレンダリング
  b) frame には全レイヤーが含まれる
  c) layer.position/rotation/scale が直接反映される
  d) キャッシュキーに transform が含まれていない

動作: 正常（意図通り）

================================================================================
修正優先度
================================================================================

【高優先度】
1. layer-panel-renderer: data-layer-index 属性追加
2. thumbnail-system: キャッシュキー生成を layer.transform から取得
3. timeline-thumbnail-utils: layer:transform-updated 購読追加

【中優先度】
4. timeline-thumbnail-utils: キャッシュキーを config.canvas から取得
5. layer-system: flipActiveLayer() 後のイベント発火確認

【低優先度】
6. thumbnail-system: Vキーモード中のキャッシュ無効化オプション

================================================================================