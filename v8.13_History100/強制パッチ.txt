// 緊急パッチ: DrawingEngine.settingsを強制的に初期化し、P/E+ドラッグを動作させる

console.log('=== 緊急パッチ適用 ===\n');

// 1. DrawingEngine.settingsを強制初期化
const de = window.coreEngine?.drawingEngine || window.drawingApp?.drawingEngine;

if (!de) {
  console.log('❌ DrawingEngine not found');
} else {
  const BrushSettingsClass = window.TegakiDrawing?.BrushSettings || window.BrushSettings;
  
  if (!BrushSettingsClass) {
    console.log('❌ BrushSettings not found');
  } else {
    // BrushSettings初期化
    if (!de.settings) {
      de.settings = new BrushSettingsClass(de.config, de.eventBus);
      console.log('✅ DrawingEngine.settings 初期化完了');
    }
    
    // _ensureBrushSettings()メソッドを追加
    de._ensureBrushSettings = function() {
      return !!this.settings;
    };
    console.log('✅ DrawingEngine._ensureBrushSettings() 追加');
    
    // ToolSizeManagerのpenSize/Opacityを同期
    if (window.toolSizeManager) {
      window.toolSizeManager.penSize = de.settings.getBrushSize();
      window.toolSizeManager.penOpacity = de.settings.getBrushOpacity();
      console.log('✅ ToolSizeManager 初期値同期');
      console.log('   - penSize:', window.toolSizeManager.penSize);
      console.log('   - penOpacity:', window.toolSizeManager.penOpacity);
    }
    
    // EventBus通知
    if (de.eventBus) {
      de.eventBus.emit('brush:initialized', { settings: de.settings });
      console.log('✅ brush:initialized イベント発火');
    }
  }
}

// 2. 動作確認
console.log('\n=== 動作確認 ===');

setTimeout(() => {
  // DrawingEngine確認
  console.log('1. DrawingEngine.settings:', !!de?.settings);
  if (de?.settings) {
    console.log('   - getBrushSize():', de.settings.getBrushSize());
    console.log('   - getBrushOpacity():', de.settings.getBrushOpacity());
  }
  
  // ToolSizeManager確認
  if (window.toolSizeManager) {
    const bs = window.toolSizeManager._getBrushSettings();
    console.log('2. ToolSizeManager._getBrushSettings():', !!bs);
    
    if (bs) {
      console.log('   ✅ 接続成功!');
    } else {
      console.log('   ❌ まだ接続されていません');
    }
  }
  
  // EventBusリスナー確認
  if (window.TegakiEventBus?._listeners) {
    const listeners = window.TegakiEventBus._listeners;
    console.log('3. EventBusリスナー:');
    console.log('   - tool:drag-size-start:', listeners['tool:drag-size-start']?.length || 0);
    console.log('   - tool:drag-size-update:', listeners['tool:drag-size-update']?.length || 0);
    console.log('   - tool:drag-size-end:', listeners['tool:drag-size-end']?.length || 0);
  }
  
  // 実際にイベントを発火してテスト
  console.log('\n4. イベント発火テスト:');
  if (window.TegakiEventBus && de?.settings) {
    const initialSize = de.settings.getBrushSize();
    const initialOpacity = de.settings.getBrushOpacity();
    
    console.log('   初期値 - size:', initialSize, 'opacity:', initialOpacity);
    
    // drag-size-start
    window.TegakiEventBus.emit('tool:drag-size-start', {
      tool: 'pen',
      startSize: initialSize,
      startOpacity: initialOpacity
    });
    
    // drag-size-update (サイズ+5, 透明度-0.1)
    window.TegakiEventBus.emit('tool:drag-size-update', {
      tool: 'pen',
      deltaX: 50,  // サイズ+5
      deltaY: -20  // 透明度-0.1
    });
    
    setTimeout(() => {
      const newSize = de.settings.getBrushSize();
      const newOpacity = de.settings.getBrushOpacity();
      
      console.log('   更新後 - size:', newSize, 'opacity:', newOpacity);
      
      if (newSize !== initialSize || newOpacity !== initialOpacity) {
        console.log('   ✅ イベント処理成功!');
      } else {
        console.log('   ❌ 値が変更されていません');
      }
      
      // drag-size-end
      window.TegakiEventBus.emit('tool:drag-size-end');
    }, 50);
  }
  
}, 200);

console.log('\n=== パッチ適用完了 ===');
console.log('\n💡 実機テスト:');
console.log('Pキーを押しながらマウスをドラッグしてください');
console.log('画面左上に視覚フィードバックが表示されるはずです');