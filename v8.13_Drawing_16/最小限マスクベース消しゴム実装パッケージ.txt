================================================================================
最小限マスクベース消しゴム実装パッケージ（段階的導入版）
エラー回避と動作確認を優先
================================================================================

【問題の原因】
1. data-models.jsにhasMask()メソッドが未実装
2. layer-system.jsに既存コードとの不整合
3. 一度に全て変更してエラー特定が困難

【解決方針】
段階的に実装し、各段階で動作確認
- Step 1: data-models.jsのみ更新（後方互換性維持）
- Step 2: 動作確認後、消しゴム機能追加


================================================================================
Step 1: data-models.js 最小限更新
================================================================================

ファイル: system/data-models.js

【変更内容】
LayerModelに以下を追加（既存機能に影響なし）:

```javascript
// ===== コンストラクタに追加 =====
constructor(data = {}) {
    // ... 既存のプロパティ ...
    
    // マスク関連プロパティ（初期値null = 未初期化）
    this.maskTexture = null;
    this.maskSprite = null;
    this._maskInitialized = false;
}

// ===== 新規メソッド追加 =====

/**
 * マスク存在チェック（安全な実装）
 */
hasMask() {
    return this._maskInitialized && 
           this.maskTexture !== null && 
           this.maskSprite !== null;
}

/**
 * マスク初期化（後で実装）
 */
initializeMask(width, height, renderer) {
    // 今は何もしない（エラー回避）
    // Phase 2で実装
    return false;
}

/**
 * マスク破棄
 */
destroyMask() {
    if (this.maskSprite) {
        this.maskSprite.destroy({ children: true });
        this.maskSprite = null;
    }
    if (this.maskTexture) {
        this.maskTexture.destroy(true);
        this.maskTexture = null;
    }
    this._maskInitialized = false;
}
```

【このステップの効果】
- layerData.hasMask()エラーが解消
- 既存機能は一切変更なし
- hasMask()は常にfalseを返す（マスク未使用状態）


================================================================================
Step 2: drawing-engine.js 安全な消しゴム実装
================================================================================

ファイル: system/drawing/drawing-engine.js

【stopDrawing()メソッドを以下に変更】

```javascript
stopDrawing() {
    if (!this.isDrawing) return;

    const strokeData = this.strokeRecorder.endStroke();
    this.clearPreview();
    this.clearEraserPreview();
    const tool = this.currentTool;

    // ===== 消しゴムツール時の処理 =====
    if (tool === 'eraser' && this.currentLayer && strokeData.points.length > 0) {
        const activeLayer = this.currentLayer;
        const layerData = activeLayer.layerData;
        
        // マスク機能がある場合のみ実行（段階的実装）
        if (layerData && typeof layerData.hasMask === 'function' && layerData.hasMask()) {
            // マスクベース消しゴム（Phase 2以降で実装）
            // 現在は何もしない
        } else {
            // フォールバック: 何もしない（消しゴム無効状態）
            // エラーは出ないが消去もされない
        }
    } else {
        // ===== ペンツール時: 既存の確定描画 =====
        this.finalizeStroke(strokeData, tool);
    }

    this.isDrawing = false;
    this.currentLayer = null;
    this.currentSettings = null;

    if (this.eventBus) {
        this.eventBus.emit('stroke:end', {
            strokeData: strokeData,
            tool: tool
        });
    }
}
```

【このステップの効果】
- 消しゴムツール選択時もエラーなし
- ペンツールは正常動作
- 消しゴムは動作しないが、エラーも出ない


================================================================================
動作確認チェックリスト
================================================================================

□ ページが正常に読み込まれる
□ キャンバスが表示される
□ ペンツールで描画できる
□ 消しゴムツールに切り替えてもエラーが出ない
□ レイヤーパネルが表示される
□ コンソールエラーなし

上記が全て確認できたら、Phase 2（マスク実装）に進む


================================================================================
Phase 2: 完全なマスク実装（動作確認後）
================================================================================

Step 1が成功したら、以下のファイルを順次更新:

1. system/data-models.js
   - initializeMask() 実装

2. system/drawing/eraser-mask-renderer.js
   - 新規ファイル作成

3. system/drawing/drawing-engine.js
   - stopDrawing() でマスク描画実装

4. index.html
   - eraser-mask-renderer.js 読み込み追加


================================================================================
実装コード（Step 1: data-models.js 最小限更新版）
================================================================================

以下のコードで既存のdata-models.jsを置き換えてください。
既存の機能は全て維持され、マスク関連のプロパティとメソッドのみ追加されます。