━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
座標系統合・完全修正 改修ロードマップ v2.0
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

■ 現状の問題点（v8.13_Drawing_52）
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1. リサイズ時に左上原点で強制リサイズ（中央基準が効かない）
2. レイヤーサムネイル: リサイズやVキー移動時に更新されない
3. Vキー移動モードのスライダー色が青系（maroon系に統一したい）←回収済
4. Vキー移動モードで反転ボタンが動作しない

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Phase 1: リサイズ処理の座標系統合【最優先】
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

目的：
リサイズ時の座標系破綻を修正。中心保持・等間隔保持の正確な動作。

対象ファイル：
- camera-system.js（resizeCanvas実装済み、検証必要）

処理フロー：
ResizePopup → CameraSystem.resizeCanvas() → renderer.resize()
→ worldContainer位置調整 → EventBus: camera:resized

実装済み内容（確認項目）：
□ resizeCanvas(width, height, alignOptions) が存在
□ CONFIG更新処理
□ worldContainer.position調整ロジック
□ 座標系キャッシュクリア（CoordinateSystem.clearCache()）

問題箇所の特定：
- alignOptions.horizontal = 'center' が正しく適用されているか
- widthDiff/heightDiff の計算が正確か
- worldContainer.position += offset の計算が正しいか

検証項目：
□ リサイズ実行後、既存描画が中央保持されているか
□ リサイズ後の新規描画位置が正確か

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Phase 2: レイヤーサムネイル更新の統合【必須】
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

目的：
レイヤーパネルのサムネイルをイベントベースで即座に更新。

対象ファイル：
- layer-panel-renderer.js（EventBus購読を追加）

処理フロー：
[camera:resized] → LayerPanelRenderer._setupEventListeners()
→ updateAllThumbnails()

[layer:transform-updated] → LayerPanelRenderer._setupEventListeners()
→ updateAllThumbnails()

実装内容（layer-panel-renderer.js）：
1. _setupEventListeners() に以下を追加：
   - 'camera:resized' イベント購読
   - 'layer:transform-updated' イベント購読
2. イベント受信時に updateAllThumbnails() 呼び出し

実装済み確認：
□ 'camera:transform-changed' 購読済み
□ 'layer:path-added' 購読済み

追加必要：
□ 'camera:resized' 購読
□ 'layer:transform-updated' 購読

検証項目：
□ リサイズ後、レイヤーサムネイルが即座に更新
□ Vキー移動後、レイヤーサムネイルが即座に更新
□ レイヤー回転後、レイヤーサムネイルが即座に更新

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Phase 3: Vキースライダー色の統一【UI改善】
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

目的：
Vキー移動モードのスライダーをmaroon系に統一。

対象ファイル：
- styles/main.css（.layer-transform-panel スタイル追加）

参考：
- settings-popup.js のスライダー色（maroon系）
- resize-popup.js のスライダー色（統一したい側）

実装内容（main.css）：
```css
#layer-transform-panel .slider-track {
    background-color: #8b4545;
}

#layer-transform-panel .slider-handle {
    background-color: #a0522d;
}
```

検証項目：
□ Vキー押下時、スライダーがmaroon系で表示
□ 他ポップアップと色調が統一

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Phase 4: Vキー反転機能の修復【機能修正】
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

目的：
Vキー移動モード時の反転ボタンとショートカットを有効化。

対象ファイル：
- layer-transform.js（_setupFlipKeyEvents確認）
- layer-system-complete.js（イベントハンドラ確認）

処理フロー：
[Hキー or Shift+Hキー] → LayerTransform._setupFlipKeyEvents()
→ onFlipRequest() → LayerSystem.flipActiveLayer()

[反転ボタンクリック] → LayerTransform._setupTransformPanel()
→ onFlipRequest() → LayerSystem.flipActiveLayer()

問題箇所の特定：
1. layer-transform.js の onFlipRequest が未設定か
2. layer-system-complete.js が flipActiveLayer() を実装していないか
3. イベント伝達が途中で途切れているか

実装確認（layer-transform.js）：
□ _setupFlipKeyEvents() が isVKeyPressed チェック
□ onFlipRequest コールバックが呼ばれる
□ flipHorizontalBtn/flipVerticalBtn のイベントリスナー

実装確認（layer-system-complete.js）：
□ flipActiveLayer(direction) メソッド存在確認
□ layerTransform.flipLayer() 呼び出し
□ layerTransform.onFlipRequest 設定確認

検証項目：
□ Vモード中、Hキーで水平反転
□ Vモード中、Shift+Hキーで垂直反転
□ Vモード中、反転ボタンクリックで反転

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Phase 5: 統合テスト・検証
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

テストシナリオ：

1. リサイズテスト
   □ 中心保持でリサイズ → 既存描画が中央に保持される
   □ 左上基準でリサイズ → 既存描画が左上基準で保持される
   □ リサイズ後の新規描画も正確

2. サムネイル更新テスト
   □ リサイズ後、レイヤーサムネイルが即座に更新
   □ Vキー移動後、レイヤーサムネイルが即座に更新
   □ レイヤー回転後、レイヤーサムネイルが即座に更新

3. Vキースライダーテスト
   □ Vキー押下時、スライダーがmaroon系
   □ 他ポップアップと色調が統一

4. Vキー反転テスト
   □ Vモード中、Hキーで水平反転
   □ Vモード中、Shift+Hキーで垂直反転
   □ 反転ボタンクリックで反転
   □ 反転後のサムネイル更新

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
改修優先度と依存関係
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Phase 1 → Phase 2 → Phase 3 → Phase 4 → Phase 5
  必須     必須     任意     必須     必須

Phase 1: リサイズ処理の修正（機能破綻）
Phase 2: サムネイル更新の統合（UX改善）
Phase 3: スライダー色の統一（UI一貫性）
Phase 4: 反転機能の修復（機能破綻）
Phase 5: 統合テスト（品質保証）

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
改修時の注意事項
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. イベント駆動設計の遵守
   - EventBus経由で疎結合を維持
   - 直接メソッド呼び出しを避ける

2. 座標系の一貫性
   - CoordinateSystem経由で座標変換
   - worldContainer操作はcamera-system.js経由

3. UI更新のタイミング
   - setTimeout()で非同期更新を確保
   - 更新頻度を考慮（100-150ms程度の遅延）

4. CSS変更の影響範囲
   - セレクタを具体的に指定
   - 他要素への影響を最小化

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
END
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━